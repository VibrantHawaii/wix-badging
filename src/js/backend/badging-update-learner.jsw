import wixData from 'wix-data';

export function updateLearner(learnerToken, regionIDs, awardedBadges, eulaRef) {
    let learner = {};

    return wixData.query("Badging-Learners")
    .contains("learnerToken", learnerToken)
    .include("supportedRegionsRef", "eulaRef")
    .find()
    .then( (learnerResults) => {
        if (learnerResults.items.length == 0)
            return errorResponse("No learner with token " + learnerToken + " was found");

        if (learnerResults.items.length > 1)
            return errorResponse("More than one (" + learnerResults.length + ") learners with token " + learnerToken + " were found");

        learner = learnerResults.items[0];

        if (eulaRef !== null)
            learner.eulaRef = eulaRef;

        return wixData.update("Badging-Learners", learner, {suppressAuth: true});
    })
    .then(() => {
        return wixData.replaceReferences("Badging-Learners", "supportedRegionsRef", learner._id, regionIDs, {suppressAuth: true});
    })
    .then(() => {
        if (awardedBadges.length > 0) {
            awardedBadges.forEach(badge => {
                wixData.query("Badging-AwardedBadges")
                .contains("_id", badge.id)
                .include("learnerRef", "badgeRef")
                .find()
                .then( (badgeResults) => {
                    if (badgeResults.items.length == 0)
                        return errorResponse("No badge with id " + badge.id + " was found");

                    if (badgeResults.items.length > 1)
                        return errorResponse("More than one (" + badgeResults.length + ") badges with id " + badge.id + " were found");

                    let badgeToModify = badgeResults.items[0];
                    badgeToModify.publicize = badge.publicize;
                    return wixData.update("Badging-AwardedBadges", badgeToModify, {suppressAuth: true});
                })
            });
        }
    })
    .then(() => {
        return {success: true};
    })
    .catch(error => {
        return errorResponse(error);
    })
}

function errorResponse(errorMsg) {
    return {
        success: false,
        errorMsg: errorMsg
    }
}